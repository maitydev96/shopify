{"version":3,"sources":["../ErrorBoundary.tsx"],"sourceRoot":"","sourcesContent":["import React, { useEffect } from \"react\";\nimport { InconsolataFont, overlayTemplate } from \"../core/errors/overlay\";\n\nconst ErrorBoundaryContainer = ({ children }: { children: React.ReactNode }): JSX.Element => {\n  return (\n    <html>\n      <head>\n        <meta charSet=\"UTF-8\" />\n      </head>\n      {children}\n    </html>\n  );\n};\n\nexport const ProductionErrorPage = (): JSX.Element => {\n  return (\n    <ErrorBoundaryContainer>\n      <head>\n        <style>{InconsolataFont}</style>\n      </head>\n      <body\n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          height: \"100vh\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            padding: \"12px\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n            gap: \"12px\",\n            fontSize: \"16px\",\n            fontWeight: \"700\",\n          }}\n        >\n          <div style={{ fontSize: \"48px\" }}>⚠️</div>\n          <div>Application Error</div>\n          <div>Please contact the developer of this app to help you troubleshoot the issue.</div>\n        </div>\n      </body>\n    </ErrorBoundaryContainer>\n  );\n};\n\nexport function DevelopmentErrorBoundary({ error }: { error: { status: number; statusText: string; data: any } | Error }): JSX.Element {\n  let title: string;\n  let data: string | undefined;\n\n  if (\"status\" in error && \"statusText\" in error && \"data\" in error) {\n    title = `${error.status}${error.statusText ? `: ${error.statusText}` : \"\"}`;\n    data = error.data;\n  } else if (error instanceof Error) {\n    title = `Error: ${error.message}`;\n    data = error.stack;\n  } else {\n    title = \"An unknown error occurred\";\n  }\n\n  const { html, javascript } = overlayTemplate({\n    style: \"rr7Frontend\",\n    errorMessage: title,\n    stackTrace: data,\n    environmentSlug: process.env.GADGET_ENV!,\n  });\n\n  useEffect(() => {\n    try {\n      const existingScript = document.head.querySelector(\"script[data-error-boundary]\");\n      if (!existingScript) {\n        const script = document.createElement(\"script\");\n        script.setAttribute(\"data-error-boundary\", \"true\"); // Add identifier\n        script.appendChild(document.createTextNode(javascript));\n        document.head.appendChild(script);\n      }\n    } catch (err) {\n      console.warn(\"Failed to inject error boundary script\", err);\n    }\n  }, [javascript]);\n\n  return (\n    <ErrorBoundaryContainer>\n      <body>\n        <div\n          dangerouslySetInnerHTML={{\n            __html: html,\n          }}\n        ></div>\n      </body>\n\n      {typeof window === \"undefined\" && <script dangerouslySetInnerHTML={{ __html: javascript }} />}\n    </ErrorBoundaryContainer>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: { status: number; statusText: string; data: any } | Error }): React.ReactNode {\n  if (process.env.NODE_ENV === \"production\") {\n    return <ProductionErrorPage />;\n  }\n\n  return <DevelopmentErrorBoundary error={error} />;\n}\n"],"names":["DevelopmentErrorBoundary","ErrorBoundary","ProductionErrorPage","ErrorBoundaryContainer","children","html","head","meta","charSet","style","InconsolataFont","body","alignItems","display","justifyContent","height","div","padding","flexDirection","width","gap","fontSize","fontWeight","error","title","data","status","statusText","Error","message","stack","javascript","overlayTemplate","errorMessage","stackTrace","environmentSlug","process","env","GADGET_ENV","useEffect","existingScript","document","querySelector","script","createElement","setAttribute","appendChild","createTextNode","err","console","warn","dangerouslySetInnerHTML","__html","window","NODE_ENV"],"mappings":";;;;;;;;;;;IAmDgBA,wBAAwB;eAAxBA;;IAkDAC,aAAa;eAAbA;;IAvFHC,mBAAmB;eAAnBA;;;;;;;;;;;qEAdoB;;;;;;yBACgB;AAEjD,MAAMC,yBAAyB,CAAC,EAAEC,QAAQ,EAAiC;IACzE,qBACE,+BAACC,4BACC,+BAACC,4BACC,+BAACC;QAAKC,SAAQ;SAEfJ;AAGP;AAEO,MAAMF,sBAAsB;IACjC,qBACE,+BAACC,4CACC,+BAACG,4BACC,+BAACG,eAAOC,wBAAe,kBAEzB,+BAACC;QACCF,OAAO;YACLG,YAAY;YACZC,SAAS;YACTC,gBAAgB;YAChBC,QAAQ;QACV;qBAEA,+BAACC;QACCP,OAAO;YACLI,SAAS;YACTI,SAAS;YACTC,eAAe;YACfN,YAAY;YACZE,gBAAgB;YAChBK,OAAO;YACPJ,QAAQ;YACRK,KAAK;YACLC,UAAU;YACVC,YAAY;QACd;qBAEA,+BAACN;QAAIP,OAAO;YAAEY,UAAU;QAAO;OAAG,qBAClC,+BAACL,aAAI,oCACL,+BAACA,aAAI;AAKf;AAEO,SAAShB,yBAAyB,EAAEuB,KAAK,EAAwE;IACtH,IAAIC;IACJ,IAAIC;IAEJ,IAAI,YAAYF,SAAS,gBAAgBA,SAAS,UAAUA,OAAO;QACjEC,QAAQ,GAAGD,MAAMG,MAAM,GAAGH,MAAMI,UAAU,GAAG,CAAC,EAAE,EAAEJ,MAAMI,UAAU,EAAE,GAAG,IAAI;QAC3EF,OAAOF,MAAME,IAAI;IACnB,OAAO,IAAIF,iBAAiBK,OAAO;QACjCJ,QAAQ,CAAC,OAAO,EAAED,MAAMM,OAAO,EAAE;QACjCJ,OAAOF,MAAMO,KAAK;IACpB,OAAO;QACLN,QAAQ;IACV;IAEA,MAAM,EAAEnB,IAAI,EAAE0B,UAAU,EAAE,GAAGC,IAAAA,wBAAe,EAAC;QAC3CvB,OAAO;QACPwB,cAAcT;QACdU,YAAYT;QACZU,iBAAiBC,QAAQC,GAAG,CAACC,UAAU;IACzC;IAEAC,IAAAA,kBAAS,EAAC;QACR,IAAI;YACF,MAAMC,iBAAiBC,SAASnC,IAAI,CAACoC,aAAa,CAAC;YACnD,IAAI,CAACF,gBAAgB;gBACnB,MAAMG,SAASF,SAASG,aAAa,CAAC;gBACtCD,OAAOE,YAAY,CAAC,uBAAuB,SAAS,iBAAiB;gBACrEF,OAAOG,WAAW,CAACL,SAASM,cAAc,CAAChB;gBAC3CU,SAASnC,IAAI,CAACwC,WAAW,CAACH;YAC5B;QACF,EAAE,OAAOK,KAAK;YACZC,QAAQC,IAAI,CAAC,0CAA0CF;QACzD;IACF,GAAG;QAACjB;KAAW;IAEf,qBACE,+BAAC5B,4CACC,+BAACQ,4BACC,+BAACK;QACCmC,yBAAyB;YACvBC,QAAQ/C;QACV;SAIH,OAAOgD,WAAW,6BAAe,+BAACV;QAAOQ,yBAAyB;YAAEC,QAAQrB;QAAW;;AAG9F;AAEO,SAAS9B,cAAc,EAAEsB,KAAK,EAAwE;IAC3G,IAAIa,QAAQC,GAAG,CAACiB,QAAQ,KAAK,cAAc;QACzC,qBAAO,+BAACpD;IACV;IAEA,qBAAO,+BAACF;QAAyBuB,OAAOA;;AAC1C"}