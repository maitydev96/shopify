{"version":3,"sources":["/var/gadget/codegen/framework-1756630026360-Css7ce/src/vite/utils.ts"],"sourcesContent":["import { BuildDirectory } from \"../remix/constants.js\";\nimport { FrontendType } from \"./helpers.js\";\n\nconst getDefaultProductionBaseUrl = (\n  assetsBucketDomain: string,\n  applicationId: string,\n  productionEnvironmentId: string,\n  useSameDomainAssets: boolean = false\n): string => {\n  if (useSameDomainAssets) {\n    return `/api/assets/${applicationId}/${productionEnvironmentId}`;\n  } else {\n    return `https://${assetsBucketDomain}/a/${applicationId}/${productionEnvironmentId}`;\n  }\n};\n\n/** A descriptor object that describes how different Gadget frontend types work for our use when building vite configs */\nexport type InternalFrontendConfig = {\n  distPath: string;\n  manifestFilePaths: string[];\n  productionBaseUrl: (\n    assetsBucketDomain: string,\n    applicationId: string,\n    productionEnvironmentId: string,\n    useSameDomainAssets: boolean\n  ) => string;\n};\n\nconst BaseRemixFrontendConfig: InternalFrontendConfig = Object.freeze({\n  distPath: `${BuildDirectory}/client`,\n  manifestFilePaths: [`${BuildDirectory}/.vite/client-manifest.json`],\n  // Remix doesn't include the trailing slash in the base URL when building, so we need to add it manually\n  productionBaseUrl: (assetsBucketDomain: string, applicationId: string, productionEnvironmentId: string, useSameDomainAssets: boolean) => {\n    return `${getDefaultProductionBaseUrl(assetsBucketDomain, applicationId, productionEnvironmentId, useSameDomainAssets)}/`;\n  },\n});\n\nconst BaseReactRouterFrontendConfig: InternalFrontendConfig = Object.freeze({\n  distPath: `${BuildDirectory}/client`,\n  manifestFilePaths: [`${BuildDirectory}/client/.vite/manifest.json`],\n  // React Router doesn't include the trailing slash in the base URL when building, so we need to add it manually\n  productionBaseUrl: (assetsBucketDomain: string, applicationId: string, productionEnvironmentId: string, useSameDomainAssets: boolean) => {\n    return `${getDefaultProductionBaseUrl(assetsBucketDomain, applicationId, productionEnvironmentId, useSameDomainAssets)}/`;\n  },\n});\n\nconst BaseViteFrontendConfig: InternalFrontendConfig = Object.freeze({\n  distPath: \".gadget/vite-dist\",\n  manifestFilePaths: [\".gadget/vite-dist/.vite/manifest.json\", \".gadget/vite-dist/manifest.json\"],\n  productionBaseUrl: getDefaultProductionBaseUrl,\n});\n\n/**\n * Get the frontend config for the given framework type.\n */\nexport const getInternalFrontendConfig = (frameworkType: FrontendType): InternalFrontendConfig => {\n  switch (frameworkType) {\n    case FrontendType.Remix:\n      return BaseRemixFrontendConfig;\n    case FrontendType.ReactRouterFramework:\n      return BaseReactRouterFrontendConfig;\n    case FrontendType.Vite:\n      return BaseViteFrontendConfig;\n\n    default:\n      throw new Error(`Unknown frontend type detected: ${frameworkType}`);\n  }\n};\n\n/**\n * Get the frontend type from the given indicator file content.\n */\nexport const getFrontendType = (indicatorFileContent: string): FrontendType => {\n  if (Object.values(FrontendType).includes(indicatorFileContent as any)) {\n    return indicatorFileContent as FrontendType;\n  }\n\n  throw new Error(`Unknown frontend type detected: ${indicatorFileContent}`);\n};\n"],"names":["BuildDirectory","FrontendType","getDefaultProductionBaseUrl","assetsBucketDomain","applicationId","productionEnvironmentId","useSameDomainAssets","BaseRemixFrontendConfig","Object","freeze","distPath","manifestFilePaths","productionBaseUrl","BaseReactRouterFrontendConfig","BaseViteFrontendConfig","getInternalFrontendConfig","frameworkType","Remix","ReactRouterFramework","Vite","Error","getFrontendType","indicatorFileContent","values","includes"],"mappings":"AAAA,SAASA,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,eAAe;AAE5C,MAAMC,8BAA8B,CAClCC,oBACAC,eACAC,yBACAC,sBAA+B,KAAK;IAEpC,IAAIA,qBAAqB;QACvB,OAAO,CAAC,YAAY,EAAEF,cAAc,CAAC,EAAEC,yBAAyB;IAClE,OAAO;QACL,OAAO,CAAC,QAAQ,EAAEF,mBAAmB,GAAG,EAAEC,cAAc,CAAC,EAAEC,yBAAyB;IACtF;AACF;AAEA,uHAAuH,GAYvH,MAAME,0BAAkDC,OAAOC,MAAM,CAAC;IACpEC,UAAU,GAAGV,eAAe,OAAO,CAAC;IACpCW,mBAAmB;QAAC,GAAGX,eAAe,2BAA2B,CAAC;KAAC;IACnE,wGAAwG;IACxGY,mBAAmB,CAACT,oBAA4BC,eAAuBC,yBAAiCC;QACtG,OAAO,GAAGJ,4BAA4BC,oBAAoBC,eAAeC,yBAAyBC,qBAAqB,CAAC,CAAC;IAC3H;AACF;AAEA,MAAMO,gCAAwDL,OAAOC,MAAM,CAAC;IAC1EC,UAAU,GAAGV,eAAe,OAAO,CAAC;IACpCW,mBAAmB;QAAC,GAAGX,eAAe,2BAA2B,CAAC;KAAC;IACnE,+GAA+G;IAC/GY,mBAAmB,CAACT,oBAA4BC,eAAuBC,yBAAiCC;QACtG,OAAO,GAAGJ,4BAA4BC,oBAAoBC,eAAeC,yBAAyBC,qBAAqB,CAAC,CAAC;IAC3H;AACF;AAEA,MAAMQ,yBAAiDN,OAAOC,MAAM,CAAC;IACnEC,UAAU;IACVC,mBAAmB;QAAC;QAAyC;KAAkC;IAC/FC,mBAAmBV;AACrB;AAEA;;CAEC,GACD,OAAO,MAAMa,4BAA4B,CAACC;IACxC,OAAQA;QACN,KAAKf,aAAagB,KAAK;YACrB,OAAOV;QACT,KAAKN,aAAaiB,oBAAoB;YACpC,OAAOL;QACT,KAAKZ,aAAakB,IAAI;YACpB,OAAOL;QAET;YACE,MAAM,IAAIM,MAAM,CAAC,gCAAgC,EAAEJ,eAAe;IACtE;AACF,EAAE;AAEF;;CAEC,GACD,OAAO,MAAMK,kBAAkB,CAACC;IAC9B,IAAId,OAAOe,MAAM,CAACtB,cAAcuB,QAAQ,CAACF,uBAA8B;QACrE,OAAOA;IACT;IAEA,MAAM,IAAIF,MAAM,CAAC,gCAAgC,EAAEE,sBAAsB;AAC3E,EAAE"}